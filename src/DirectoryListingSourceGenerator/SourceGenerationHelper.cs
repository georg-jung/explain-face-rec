// Copyright (c) Georg Jung. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;
using System.Collections.Generic;
using System.Text;

namespace DirectoryListingSourceGenerator;

internal static class SourceGenerationHelper
{
    public const string AttributeNamespace = "DirectoryListingSourceGenerator";

    public const string AttributeClass = "DirectoryListingAttribute";

    public const string AttributeFullName = $"{AttributeNamespace}.{AttributeClass}";

    public const string Attribute = $@"
// <auto-generated/>
// Copyright (c) Georg Jung. All rights reserved.
// Licensed under the MIT license.

using System;

namespace {AttributeNamespace};

/// <summary>
/// Use a partial method with <see cref=""T:string""/> as a return type to get a list of the files in the specified directory at compile time.
/// Use a partial method with <see cref=""T:IReadOnlyDictionary{{string, string[]}}""/> as a return type to get a list of the files in the subdirectories of the specified directory at compile time.
/// </summary>
[AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)]
public class {AttributeClass} : Attribute
{{
    /// <summary>
    /// Initializes a new instance of the <see cref=""DirectoryListingAttribute""/> class. Annotate a partial method with this attribute to get a list of the files in the specified directory at compile time.
    /// </summary>
    /// <param name=""path"">The path to the directory to list. Absolute or relative to the source code file this attribute is used in.</param>
    public DirectoryListingAttribute(string path)
    {{
        Path = path;
    }}

    /// <summary>
    /// The path to the directory to list. Absolute or relative to the source code file this attribute is used in.
    /// </summary>
    public string Path {{ get; }}
}}
";
}
